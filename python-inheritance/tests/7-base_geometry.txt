>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

(string and int)
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)

(area)
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

(integer_validator())
>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

(integer_validator("age", 0))
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

(integer_validator("age", -1))
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", -1)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

(integer_validator("age", "1"))
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", "1")
Traceback (most recent call last):
    ...
TypeError: age must be an integer

(integer_validator("name", (4,)))
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", (4,))
Traceback (most recent call last):
    ...
TypeError: name must be an integer

(integer_validator("name", None))
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
    ...
TypeError: name must be an integer

(integer_validator("name", {4, 5, 6}))
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", {4, 5, 6})
Traceback (most recent call last):
    ...
TypeError: name must be an integer

(integer_validator("name", [3]))
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", [3])
Traceback (most recent call last):
    ...
TypeError: name must be an integer
